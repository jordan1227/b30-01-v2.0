--[[
Разгрузка v 3.0
Vergas
© NLC-6.0
]]--

class "pouch_dialog" (CUIScriptDialog)

local inv_items = {}        --информация для подсумка (что положить)
local inv_items_heavy = {}      --информация для подсумка (что положить в ячейку тяжолого оружия)
local pouch_content = {}    --информация по содержимому подсумка (что лежит)

local click  = 0      -- если 0, то по кнопке не кликали, иначе равен номеру клика 1 
local old_click = 0    -- если 0, то по кнопкам не кликали, иначе равен номеру кнопки предыдущего клика
local button = 0

function pouch_dialog:__init(owner) super()
  self.owner = owner
  self:InitControls()
  self:InitCallBacks()
end

function pouch_dialog:DbgDetachChild(wnd, ctx)       
    if wnd then        
       local wname = wnd:WindowName() or 'nil'
       -- wprintf(" deleting window~C0D %s~C07 (~C0A%s~C07), context =~C0F %s~C07", FormatPtr(wnd), wname, ctx or 'nil')
       -- SetDbgVar("detach_child", wname .. " "..(ctx or 'nil'), true)
       self:DetachChild(wnd)
    end   
end

function pouch_dialog:InitControls()
    ODS("================================================ подсумок открываетсЯ =========================== ")
  -- Положение и размеры окна
  self:Init(196,0,632,489)
  -- файл-описатель элементов
  local xml = CScriptXmlInit()
  xml:ParseFile("ui_cheat_podsumok.xml")
  
  xml:InitStatic("background_0", self)     
  xml:InitStatic("background", self)       --Собственно рамка
  xml:InitStatic("background_2", self)     --надпись ПОДСУМОК


  self:Register(xml:Init3tButton("btn_stop", self),"btn_stop")    -- Кнопка Выкл
  self:Register(xml:Init3tButton("btn_empty", self),"btn_empty")    -- Кнопка Выгрузить
  self:Register(xml:Init3tButton("btn_left_1", self),"btn_left_1")  -- Кнопка прокрутки слотов влево
  self:Register(xml:Init3tButton("btn_right_1", self),"btn_right_1")  -- Кнопка прокрутки слотов вправо
  self:Register(xml:Init3tButton("btn_left_2", self),"btn_left_2")  -- Кнопка прокрутки тяжолого влево
  self:Register(xml:Init3tButton("btn_right_2", self),"btn_right_2")  -- Кнопка прокрутки тяжолого вправо
  self:Register(xml:Init3tButton("btn_1", self),"btn_1")        -- Кнопка 1 
  self:Register(xml:Init3tButton("btn_2", self),"btn_2")        -- Кнопка 2 
  self:Register(xml:Init3tButton("btn_3", self),"btn_3")        -- Кнопка 3 
  self:Register(xml:Init3tButton("btn_4", self),"btn_4")        -- Кнопка 4 
  self:Register(xml:Init3tButton("btn_5", self),"btn_5")        -- Кнопка 5  (тяжелое)
  
  --собираю борохло по рюкзаку
  local src_items = razgruzka.inventory_items( {"detector"} )  
  --выделяю боеприпасы тяжелого оружия(короче, сортирую)  
  for sect, count in src_items:pairs() do
      local rec = razgruzka.make_record(sect, count)
      if razgruzka.is_ammo_heavy(sect) then
         table.insert(inv_items_heavy, rec) 
      else  
         table.insert(inv_items, rec)
      end
  end
  
  -- Определяю информацию по содержимому подсумка
  razgruzka.update_avail_items() -- боеприпасы могли быть потрачены
  pouch_content = razgruzka.load_pouch_content("ui_cheat_podsumok")
  
  --Если надо, добавляю в таблицы записи-пустышки
  if table.getn(inv_items) < 4 then
     inv_items = razgruzka.add_nope_records(inv_items,4)
  end

  wprintf(" inv_items: ")
  dump_table(inv_items)

  if table.getn(inv_items_heavy) == 0 then
     inv_items_heavy = razgruzka.add_nope_records(inv_items_heavy, 1)
  end
  
  -- расставляю иконки на кнопки
  self:reset_windows()
  
  -- Кнопка 5
  if inv_items_heavy[1].sect ~= "?" then
    self:set_btn_n(5)  
  end
  
  -- Кнопка 6: подсумок
  if pouch_content(1).sect ~= "?" then
    self:set_btn_n(6)
  end
end

function pouch_dialog:InitCallBacks()
  self:AddCallback("btn_stop", ui_events.BUTTON_CLICKED, self.btn_stop, self)     -- Кнопка Выкл
  self:AddCallback("btn_empty", ui_events.BUTTON_CLICKED, self.btn_empty, self)     -- Кнопка Выгрузить
  self:AddCallback("btn_left_1", ui_events.BUTTON_CLICKED, self.btn_left_1, self)    -- Кнопка прокрутки слотов влево
  self:AddCallback("btn_right_1", ui_events.BUTTON_CLICKED, self.btn_right_1, self)  -- Кнопка прокрутки слотов влево
  self:AddCallback("btn_left_2", ui_events.BUTTON_CLICKED, self.btn_left_2, self)    -- Кнопка прокрутки тяжолого влево
  self:AddCallback("btn_right_2", ui_events.BUTTON_CLICKED, self.btn_right_2, self)  -- Кнопка прокрутки тяжолого влево
  self:AddCallback("btn_1", ui_events.BUTTON_CLICKED, self.btn_1, self)         -- Кнопка 1 
  self:AddCallback("btn_2", ui_events.BUTTON_CLICKED, self.btn_2, self)         -- Кнопка 2 
  self:AddCallback("btn_3", ui_events.BUTTON_CLICKED, self.btn_3, self)         -- Кнопка 3 
  self:AddCallback("btn_4", ui_events.BUTTON_CLICKED, self.btn_4, self)         -- Кнопка 4 
  self:AddCallback("btn_5", ui_events.BUTTON_CLICKED, self.btn_5, self)         -- Кнопка 5
end

function pouch_dialog:OnKeyboard(dik, keyboard_action)
  CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
  if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
    -- на выход повесим Esc
    if dik == DIK_keys.DIK_ESCAPE then
     self:btn_stop()
    --elseif dik == DIK_keys.DIK_A then
     --self:btn_left()
    --elseif dik == DIK_keys.DIK_D then
     --self:btn_right()
    end
  end
  return true
end

function pouch_dialog:btn_left()
  if clik == 0 then
    self:btn_left_1()
  else
    if button < 5 then
      self:btn_left_1()
    else
      self:btn_left_2()
    end
  end
end

function pouch_dialog:btn_right()
  if clik == 0 then
    self:btn_right_1()
  else
    if button < 5 then
      self:btn_right_1()
    else
      self:btn_right_2()
    end
  end
end

function pouch_dialog:CloseDialog()
  pouch_content = nil
  inv_items = {}
  inv_items_heavy = {}
  -- снимаю запрет на подмену инвентаря
  bind_stalker.restore_weapon()        --восстанавливаю руки и оружие на худе
  used_items.set_get_flag_use_gadget(1,true)
  self:GetHolder():start_stop_menu (self,true)
  vergas_lib.s_play(vergas_lib.set_pr_from_config_str("podsumok","snd_deselect"),1)
  razgruzka.open_inv_raz_pod = false
  CUIScriptDialog.CloseDialog(self)
end

function pouch_dialog:btn_stop()                -- Кнопка Выкл
  click  = 0       
  old_click = 0    

  self:permission_quit()    --восстанавливаю содержимое подсумка и инвнтаря
  self:del_windows(1, 6)
  self:remove_static("wnd_forbid")  
  self:del_windows_colour()
  self:CloseDialog()
end

function pouch_dialog:permission_quit()
   --сохроняю наполняемость подсумка в переменной
  pouch_content:save()
  razgruzka.close_inventory()    
end
-------------------------------------------------------------------------
--расстановка иконок и количества на кнопках
-------------------------------------------------------------------------
function load_record(tbl, index) -- универсальная загрузка пары "секция, количество"
 local rec = tbl[index]
 if rec.sect ~= nil then
    return rec.sect, rec.count 
 else
    for sect, count in pairs(rec) do
      return sect, count
    end
 end   
 return "?", 0
end



function pouch_dialog:set_btn_n(btn_num)
    self:del_windows(btn_num, btn_num)
    
    local rects = { }
    rects[1] = 
      {
        { 82+24,352,33,33  },
        { 154+24,352,33,33 },
        { 231+24,352,33,33 },
        { 308+24,352,33,33 },
        { 430+33,352,33,33 },
        { 269+33,281,33,33 }
        
      }
    rects[2] =   
      {
        { 82+8,352,66,33 },    -- 1
        { 154+8,352,66,33 },   -- 2
        { 231+8,352,66,33 },   -- 3
        { 308+8,352,66,33 },   -- 4
        { 430+16,352,66,33 },  -- 5
        { 269+16,281,66,33 }   -- 6 
      }      
    rects[3] = 
      {
         {}, 
         {},
         {},
         {},
         { 430,352,99,33 },
         { 269,281,99,33 }
      }
    

    --расставляет иконки на худе подсумка    
  
    local info_t = inv_items 
    local n_rec = btn_num
    
    if btn_num == 5 then
       info_t = inv_items_heavy
       n_rec  = 1
    elseif btn_num == 6 then
       info_t = pouch_content(true)
       n_rec = 1
    end
    
    local sect, count = load_record(info_t, n_rec)
  if count == 0 then return end 
  -- иконка
  local ik_t = vergas_lib.set_pr_from_config(sect,"inv_grid_width")
  local rlist = rects[ik_t]
  local rect = { 0, 0, 1, 1 }
  if rlist then rect = rlist[btn_num] end
  return self:add_static("btn_"..tostring(btn_num), rect, count, nil, "", sect)    
end

-------------------------------------------------------------------------
--работа кнопок зарядки подсумка
-------------------------------------------------------------------------
function pouch_dialog:btn_n(btn_num)
    local info_t = inv_items 
    local n_rec = btn_num
       
    
    if btn_num == 5 then
       info_t = inv_items_heavy
       n_rec  = 1
    elseif btn_num == 6 then
       info_t = pouch_content(true)
       n_rec = 1
    end
    
    local names = { "ui_btn_4", "ui_btn_5", "ui_btn_5", "ui_btn_6" }
    
    local rects =   
      {
        { 82,352,71,33 },   
        { 154,352,76,33 },
        { 231,352,76,33 },
        { 308,352,71,33 },                   
      }
    
    local sect, count = load_record(info_t, n_rec)
  if count == 0 then return end
    
  self:set_click(btn_num)
  if click == 1 then            -- первый клик
    --подсвечиваю кнопку
    self:set_static_colour( rects[btn_num], names[btn_num] )
    self:set_btn_n(btn_num)
    self:set_windows_capacity(razgruzka.get_capacity_pouch(sect))
  else                  -- второй клик
    self:del_windows_colour()
    self:remove_static("wnd_capacity")
    old_click = 0
    -- процедура загрузки боеприпасов в подсумок
    self:take_in_podsumok(btn_num)
    self:set_btn_n(btn_num)
  end
    
end


function pouch_dialog:btn_1()            -- Кнопка 1
  button = 1
   self:btn_n(1)
end

function pouch_dialog:btn_2()            -- Кнопка 2
   button = 2
   self:btn_n(2)
end

function pouch_dialog:btn_3()            -- Кнопка 3
   button = 3
   self:btn_n(3)
end

function pouch_dialog:btn_4()            -- Кнопка 4 
   button = 4
   self:btn_n(4) 
end

function pouch_dialog:btn_5()            -- Тяжелое оружие
    local sect, count = load_record(inv_items_heavy, 1)
  button = 5
  if count ~= 0 then
    self:set_click(5)
    if click == 1 then            -- первый клик
      --подсвечиваю кнопку
      self:set_static_colour( {405,352,143,33} ,"ui_btn_3")
      self:set_btn_n(5)
      self:set_windows_capacity(razgruzka.get_capacity_pouch(sect))
    else                  -- второй клик
      self:remove_static("wnd_forbid")
      self:remove_static("wnd_capacity")      
      old_click = 0
      -- процедура загрузки боеприпасов в подсумок
      local wpn_1 = db.actor:item_in_slot(1)    -- оружие в 1 слоте как объект
      local wpn_2 = db.actor:item_in_slot(2)    -- оружие во 2 слоте как объект
      --проверяю оружие на "тяжесть"
      local flag_1 = false
      local flag_2 = false
            local t1 = "nil"
            local t2 = "nil"
            
      if wpn_1  then
               t1 = vergas_lib.set_pr_from_config_str(wpn_1:section(),"weapon_type") 
         flag_1 = (t1 == "heavy")
      end  
      if wpn_2 then
               t2 = vergas_lib.set_pr_from_config_str(wpn_2:section(),"weapon_type")
         flag_2 = (t2 == "heavy")
      end
      if (not flag_1) and (not flag_2) then
        --вывожу предупреждающие статики
        self:set_static_zapret("НЕТ  ОРУЖИЯ  ДЛЯ   ПЕРЕЗАРЯДКИ! "..sprintf(" t1 = %s, t2 = %s ", t1, t2) )
        return
      end
      --проверяю на соответствие боеприпасов
      local flag_compatible_1 = false
      local flag_compatible_2 = false
      if wpn_1 and vergas_lib.set_pr_from_config_str(wpn_1:section(),"ammo_class") == sect then
        flag_compatible_1 = true
      end  
      if wpn_2 and vergas_lib.set_pr_from_config_str(wpn_2:section(),"ammo_class") == sect then
        flag_compatible_2 = true
      end
      if (not flag_compatible_1) and (not flag_compatible_2) then
        --вывожу предупреждающие статики
        self:set_static_zapret("НЕТ  ОРУЖИЯ  ДЛЯ   ПЕРЕЗАРЯДКИ!")
        return
      end
      local flag_pr = false
      if wpn_1 and flag_compatible_1     and wpn_1:get_ammo_in_magazine() == 0 then
        flag_pr = true
      elseif wpn_2 and flag_compatible_2 and wpn_2:get_ammo_in_magazine() == 0 then  
        flag_pr = true
      end
      if flag_pr then
                wprintf("~C0A take heavy allowed ~C07")
        self:take_in_podsumok(5)
      else
        --вывожу предупреждающие статики
        self:set_static_zapret("ТЯЖЕЛОЕ  ОРУЖИЕ  УЖЕ  ЗАРЯЖЕНО!")
      end
      --[[
      local wpn = db.actor:item_in_slot(2)    -- оружие во 2 слоте как объект
      if wpn ~= nil and vergas_lib.set_pr_from_config_str(wpn:section(),"weapon_type") == "heavy" then 
        if wpn:get_ammo_in_magazine() == 0 then
          self:take_in_podsumok(5)
        else
          --вывожу предупреждающие статики
          self:set_static_zapret("ТЯЖЫЛОЕ  ОРУЖИЕ  УЖЕ  ЗАРЯЖЕНО!")
        end
      else
        --вывожу предупреждающие статики
        self:set_static_zapret("НЕТ  ОРУЖИЯ  ДЛЯ   ПЕРЕЗАРЯДКИ!")
      end
      ]]--
    end
  end
end


function pouch_dialog:set_click(j)
  --Убираю запрет на зарядку тяжолого оружия
  self:remove_static("wnd_forbid")

  if old_click == 0 then    -- по кнопкам не кликали
    click = 1        -- кнопка j превый клик
  elseif old_click == j  then  -- кнопка j уже кликнута
    click = 2        -- кнопка j второй клик
  elseif (old_click ~= j) and (old_click ~= 0)  then   -- кликали по другой кнопке
    click = 1
  end
  
  old_click = j
end

function pouch_dialog:set_static_colour(rect, textr)
  self:del_windows_colour()
  self:add_static("wnd_colour", rect, "", textr)
end

function pouch_dialog:set_static_zapret(str)
  self:remove_static("wnd_forbid")
    local wnd = self:add_static("wnd_forbid", {210,80,100,35}, str, "", {})
    wnd:SetTextColor(255, 238, 44, 44)  
end

function pouch_dialog:set_windows_capacity(mag_max)
    self:remove_static("wnd_capacity")
  --[[
  wnd_capacity = CUIStatic()
  wnd_capacity:SetAutoDelete(true)
  self:AttachChild(wnd_capacity)
  wnd_capacity:SetWndRect(210+10,80,100,35)
  wnd_capacity:SetFont(GetFontMedium())
  wnd_capacity:SetTextColor(255, 238, 44, 44)
  wnd_capacity:SetText("МАКСИМАЛЬНОЕ НАПОЛНЕНИЕ: ".. mag_max)
  ]]--
end

-------------------------------------------------------------------------
--работа кнопок прокрутки
-------------------------------------------------------------------------

function pouch_dialog:btn_left_1()                --Кнопка прокрутки слотов влево
  self:remove_static("wnd_capacity")
  self:del_windows_colour(2)  
  inv_items = razgruzka.list_step_left(inv_items,4)
  vergas_lib.s_play(vergas_lib.set_pr_from_config_str("podsumok","snd_scroll"),1)
  self:reset_windows()
end

function pouch_dialog:btn_right_1()              --Кнопка прокрутки слотов вправо
  self:remove_static("wnd_capacity")
  self:del_windows_colour(2)  
  inv_items = razgruzka.list_step_right(inv_items,4)
  vergas_lib.s_play(vergas_lib.set_pr_from_config_str("podsumok","snd_scroll"),1)
  self:reset_windows()
end

function pouch_dialog:btn_left_2()                --Кнопка прокрутки слотов влево (тяжелое)
  self:remove_static("wnd_capacity")
  self:del_windows_colour(2)  
  inv_items_heavy = razgruzka.list_step_left(inv_items_heavy,1)
  vergas_lib.s_play(vergas_lib.set_pr_from_config_str("podsumok","snd_scroll_heavy"),1)
  self:set_btn_n(5) 
end

function pouch_dialog:btn_right_2()              --Кнопка прокрутки слотов вправо (тяжелое)
  self:remove_static("wnd_capacity")
  self:del_windows_colour(2)  
  inv_items_heavy = razgruzka.list_step_right(inv_items_heavy,1)
  vergas_lib.s_play(vergas_lib.set_pr_from_config_str("podsumok","snd_scroll_heavy"),1)
  self:set_btn_n(5) 
end

-------------------------------------------------------------------------
--функции перемещения хабара 
-------------------------------------------------------------------------
function pouch_dialog:sound_for_item(sect, play, suffix)
   local sound = false
   if sect:sub (1 , 4) == "ammo" then
    if razgruzka.is_ammo_gren(sect) then
      --подствольные гранаты
      sound = vergas_lib.set_pr_from_config_str("podsumok","snd_ammo-grenade_"..suffix)
    else
      -- просто патроны
      sound = vergas_lib.set_pr_from_config_str("podsumok","snd_ammo_"..suffix)
    end
  elseif razgruzka.is_medical(sect) then
    --медицина
    sound = vergas_lib.set_pr_from_config_str("podsumok","snd_medkit_"..suffix)
  elseif razgruzka.is_grenade(sect) then
    --гранаты
    sound = vergas_lib.set_pr_from_config_str("podsumok","snd_grenade_"..suffix)
   end
   if sound and play then
      vergas_lib.s_play(sound, 1)   
   end
   
   return sound
end

function pouch_dialog:take_in_podsumok(btn, alt_t)
  local max_mag = 0
  local take_max = 0
    local take_from = inv_items  

    local src_rec = {}
    
  -- и засовываю
  if btn < 5 then --обычное оружие        
        src_rec = inv_items[btn]    
    else           --тяжeлое оружие
        src_rec = inv_items_heavy[1]       
  end
    
    if src_rec == nil then
       wprintf("~C0C #ERROR:~C07 can't take nil, btn = %d ", btn)  
       return 
    end
         
    local sect = src_rec.sect 
  if sect==nil or sect == "?" or string.find(sect, "^detector") then return end
    
    wprintf(" trying take~C0A %s~C07 into podsumok ", sect)
    
  --определяю состояние подсумка(а есть ли что там?)
    local dest_rec = pouch_content(1) 
  if dest_rec.sect ~= "?" then
    --в подсумке что-то есть
    if dest_rec.sect ~= src_rec.sect then
      --пытаюсь засунуть не то, что уже лежит
            wprintf("~C04 #REJECT: cannot put item with section ~=~C0E %s~C07 ", src_rec.sect)
      return
    end
    max_mag = razgruzka.get_capacity_pouch(dest_rec.sect)
    if dest_rec.count == max_mag then
      --подсумок заполнен
            wprintf("~C04 #REJECT: maximum count achieved =~C0D %d~C07 ", dest_rec.count)
      return
    end  
    --определяю, сколько можно засунуть
    if max_mag > dest_rec.count then
       take_max = max_mag - dest_rec.count
    end
  else
    take_max = razgruzka.get_capacity_pouch(src_rec.sect)
    
    if take_max == 0 then
           wprintf("~C04 #REJECT: cannot put this item ~C07")
       --это нельзя положить
       return
    end
  end
  
    local rec = src_rec    
  local rbx = pouch_content(1)
    
    rbx.sect = rec.sect
        
  if  rec.count >= take_max then
    rbx.count = rbx.count + take_max
    rec.count = rec.count - take_max
  else
    rbx.count = rbx.count + rec.count
    rec.count = 0 
  end
  if rbx.count == 0 then
     rbx.sect = "?"
  end
  
  --играю звук
    self:sound_for_item(rbx.sect, true, "load") 
  --обновляю иконку 
  self:set_btn_n(6)
end

function pouch_dialog:btn_empty()          -- Кнопка Выгрузить из подсумка
  local rec = pouch_content(1)
    local sect = rec.sect
    
    
  if sect == "?" then
    --в подсумке пусто и выбрасывать нечего
    return
  end
  
  --определяю: тяжелое вынаю или нет
  local heavy_tmp = vergas_lib.str_explode("|",vergas_lib.set_pr_from_config_str("razgruzka","heavy_weapon_ammo"),true)
  local flag = false
  
  if table.getn(heavy_tmp) ~= 0 then
    for j = 1, table.getn(heavy_tmp) do
      if heavy_tmp[j] == sect then
        flag = true
      end
    end
  end
  
  if flag then
    --тяжелое вынаю
    inv_items_heavy = razgruzka.reset_records(inv_items_heavy, sect, rec.count)
    --играю звук
    -- vergas_lib.s_play(vergas_lib.set_pr_from_config_str("podsumok","snd_ammo_reload"),1)
    --обновляю иконку 
    self:set_btn_n(5)
  else
    --обычное на выброс пошло
    inv_items = razgruzka.reset_records(inv_items, sect, rec.count)

    -- расставляю иконки на кнопки
    self:reset_windows()
  end
  --играю звук
    self:sound_for_item(sect, true, "reload")  
  rec.sect = "?"
  rec.count = 0
  --обновляю иконку 
  self:set_btn_n(6)
end
-------------------------------------------------------------------------
--функции общего назначения
-------------------------------------------------------------------------
function pouch_dialog:reset_windows()  
  self:del_windows(1, 4)
  for i = 1, 4 do  
     if inv_items[i].sect ~= "?" then
         self:set_btn_n(i)
     end
    end 
  
end

function pouch_dialog:del_windows(from, to)  --убираю объявленные статики
    for i = from, to do 
        self:remove_static("btn_"..tostring(i))   
  end  
end

function pouch_dialog:del_windows_colour(param)
    self:remove_static("wnd_colour")  
  
  if param == 2 then
    click  = 0       
    old_click = 0
  end
end

function pouch_dialog:del_windows_colour_2()
  if self:remove_static("wnd_colour") then        
    click  = 0       
    old_click = 0
  end
end
