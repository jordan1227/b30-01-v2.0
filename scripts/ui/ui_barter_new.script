-- "bandit_pda_trading" - по этому инфо у Жилы ПДА в продаже появляются. Надо ли это в условие включать??
_dialog        = level.main_input_receiver()

local tbl_translate_arts = {
    [ "lvl1" ] = sak_dialog.table_aart,
    [ "lvl2" ] = sak_dialog.table_bart,
    [ "lvl3" ] = sak_dialog.table_cart,
    [ "lvl4" ] = sak_dialog.table_dart,
    [ "lvl5" ] = sak_rand_nagrad.table_amkaart,
    [ "lvl6" ] = sak_rand_nagrad.table_amkbart,
    [ "lvl7" ] = sak_rand_nagrad.table_amkcart,
    [ "lvl8" ] = sak_rand_nagrad.table_amkdart
}

local tbl_npc_name_koeff = {
    [ "pahom"    ] = { 26, "За холодец у Пахома:" },
    [ "silvestr" ] = { 25, "Обмен у Сильвестра:" },
    [ "sid_mod5" ] = { 24, "За модификаты у Сидоровича:"      },
    [ "sid_mod6" ] = { 23, "За мезомодификаты у Сидоровича:"  },
    [ "sid_mod7" ] = { 22, "За гипермодификаты у Сидоровича:" },
    [ "sid_mod8" ] = { 21, "За абсолюты у Сидоровича:"        },
    [ "menyala"  ] = { 20, "Обмен артов у Санька-Менялы:"     },
    [ "doctor"   ] = { 18, "Обмен артов у Болотного Доктора:" },
    [ "fuel_esc" ] = { 16, "Сегодня за бензин предлагают:"    },
    [ "fuel_bar" ] = { 15, "Сегодня за бензин предлагают:"    },
    [ "zub"      ] = { 14, "Доступные рецепты у Зуба:"        },
    [ "sultan"   ] = { 13, "Сегодня Султан предлагает:"       },
    [ "sidor"    ] = { 3,  "Справедливый обмен у Сидоровича:" },
    [ "kuzya"    ] = { 2,  "Кузнецов по дружбе предлагает:"   },
    [ "sherstuk" ] = { 4,  "Шерстюк меняет на водочку:"       },
    [ "barman"   ] = { 6,  "У Бармена сегодня такое:"         },
    [ "petrenko" ] = { 7,  "Расклады по обмену у Петренко:"   },
    [ "mihalych" ] = { 12, "Кум Михалыч предлагает:"          },
    [ "shinkar"  ] = { 8,  "У Шинкаря такое например:"        },
    [ "zhila"    ] = { 5,  "Папа Жила барыжит:"               },
    [ "vahtang"  ] = { 10, "Вахтанг уважает тебя уапще:"      },
    [ "eger"     ] = { 11, "Валера Егерь настрелял:"          },
    [ "dan"      ] = { 17, "Дэн меняет на части монстров:"    }
}

tbl_translate_price = {
    [ "lvl1"  ] = "арт 1 уровня от 80%",
    [ "lvl2"  ] = "арт 2 уровня от 80%",
    [ "lvl3"  ] = "арт 3 уровня от 80%",
    [ "lvl4"  ] = "арт 'Пустышка' от 80%",
    [ "lvl5"  ] = "модификат от 80%",
    [ "lvl6"  ] = "мезомодификат от 80%",
    [ "lvl7"  ] = "гипермодификат от 80%",
    [ "lvl8"  ] = "абсолют от 80%",
    [ "lvl9"  ] = "капсула артефакта",  -- 3ур
    [ "lvl10" ] = "капсула артефакта",  -- ПУстышка
    [ "lvl11" ] = "уникальный артефакт"
}

local barter_tbl = {
    [ "pahom" ] = {
        { "medkit_scientic",         1,  "banka_full", 2 },
        { "ammo_12x70_buck",         5,  "banka_full", 2 },
        { "ammo_12x76_zhekan",       2,  "banka_full", 2 },
        { "ammo_12x76_dart",         3,  "banka_full", 2 },
        { "repair_item_weapon_feik", 2,  "banka_full", 2 },
        { "repair_itemoutfit_feik",  2,  "banka_full", 2 },
        { "drag_cat_eyes",           7,  "banka_full", 2 },
        { "sleeping_bag",            1,  "banka_full", 2 }
    },
    [ "silvestr" ] = {
        --{ "ammo_12x76_zhekan",   3,  "flesh_leather",            1 },
        { "ammo_m209",           4,  "flesh_leather",            1 },
        { "ammo_vog-25",         4,  "flesh_leather",            1 },
        { "ammo_9x39_ap",        4,  "mutant_hand_kontroler",    1 },
        { "ammo_7.62x54_7h14",   2,  "mutant_poltergeist_glas",  1 },
        { "ammo_7.62x51_ap",     2,  "mutant_krovosos_jaw",      1 },
        { "ammo_8.6x70_ap",      2,  "mutant_psevdogigant_hand", 1 },
        { "lvl3",                1,  "mutant_e_chimera_kidney",  1 },
    },
    [ "sid_mod5" ] = {
        { "ammo_9x18_pmm",       25,  "lvl5", 1 }, -- 1000
        { "ammo_9x19_pbp",       20,  "lvl5", 1 }, -- 800
        { "ammo_11.43x23_hydro", 12,  "lvl5", 1 }, -- 240
        { "ammo_5.45x39_ap",     25,  "lvl5", 1 }, -- 750
        { "ammo_5.56x45_ap",     25,  "lvl5", 1 }, -- 750
        { "ammo_7.62x39_ap",     20,  "lvl5", 1 }, -- 600
        { "ammo_7.62x51_fmj",    7,   "lvl5", 1 }, -- 140
        { "ammo_og-7b",          2,   "lvl5", 1 },
        { "ammo_vog-25",         15,  "lvl5", 1 },
        { "ammo_m209",           15,  "lvl5", 1 },
        { "wpn_eagle_m1",        1,   "lvl5", 1 }
    },
    [ "sid_mod6" ] = {
        { "ammo_9x18_pmm",       30,  "lvl6", 1 }, -- 1200
        { "ammo_9x19_pbp",       25,  "lvl6", 1 }, -- 1000
        { "ammo_11.43x23_hydro", 18,  "lvl6", 1 }, -- 360
        --{ "military_outfit",     1,   "lvl6", 1 },
        { "ammo_5.45x39_ap",     30,  "lvl6", 1 }, -- 900
        { "ammo_5.56x45_ap",     30,  "lvl6", 1 }, -- 900
        { "ammo_7.62x39_ap",     25,  "lvl6", 1 }, -- 750
        { "ammo_7.62x54_7h14",   10,  "lvl6", 1 }, -- 100
        { "ammo_9x39_ap",        10,  "lvl6", 1 }, -- 300
        { "ammo_8.6x70_ap",      6,   "lvl6", 1 }, -- 60
        { "ammo_7.62x51_fmj",    9,   "lvl6", 1 }, -- 180
        { "ammo_og-7b",          3,   "lvl6", 1 },
        { "ammo_vog-25",         18,  "lvl6", 1 },
        { "ammo_m209",           18,  "lvl6", 1 }
    },
    [ "sid_mod7" ] = {
        { "ammo_11.43x23_hydro", 25,  "lvl7", 1 }, -- 500
        { "military_outfit",     1,   "lvl7", 1 },
        { "cs_heavy_outfit",     1,   "lvl7", 1 },
        { "ammo_7.62x39_ap",     35,  "lvl7", 1 }, -- 1050
        { "ammo_7.62x54_7h14",   15,  "lvl7", 1 }, -- 150
        { "ammo_9x39_ap",        15,  "lvl7", 1 }, -- 450
        { "ammo_8.6x70_ap",      10,  "lvl7", 1 }, -- 100
        { "ammo_7.62x51_ap",     9,   "lvl7", 1 }, -- 180
        { "ammo_og-7b",          4,   "lvl7", 1 },
        { "ammo_vog-25",         25,  "lvl7", 1 },
        { "ammo_m209",           25,  "lvl7", 1 },
        { "wpn_flame",           1,   "lvl7", 1 }
    },
    [ "sid_mod8" ] = {
        { "militaryspec_outfit", 1,   "lvl8", 1 },
        { "cs_heavy_outfit",     1,   "lvl8", 1 },
        { "ammo_7.62x54_7h14",   20,  "lvl8", 1 }, -- 200
        { "ammo_9x39_ap",        20,  "lvl8", 1 }, -- 600
        { "ammo_8.6x70_ap",      15,  "lvl8", 1 }, -- 150
        { "ammo_7.62x51_ap",     12,  "lvl8", 1 }, -- 240
        { "ammo_og-7b",          5,   "lvl8", 1 },
        { "ammo_vog-25",         30,  "lvl8", 1 },
        { "ammo_m209",           30,  "lvl8", 1 },
        { "wpn_flame",           1,   "lvl8", 1 }
    },
    [ "menyala" ] = {
        { "af_cristall_dyn2d",          1,  "lvl2",             3 },
        { "af_night_star_dyn2d",        1,  "lvl2",             3 },
        { "af_ameba_mica_dyn2d",        1,  "lvl2",             3 },
        { "af_gold_fish_dyn2d",         1,  "lvl2",             3 },
        { "af_rusty_sea-urchin_dyn2d",  1,  "lvl2",             3 },
        { "af_soul_dyn2d",              1,  "lvl2",             3 },
        { "af_electra_moonlight_dyn2d", 1,  "lvl2",             3 },
        { "af_dummy_spring",            1,  "lvl3",             3 },
        { "af_dummy_dummy",             1,  "lvl3",             3 },
        { "af_dummy_battery",           1,  "lvl3",             3 },
        { "af_dummy_pellicle",          1,  "lvl3",             3 },
        { "af_dummy_glassbeads",        1,  "lvl3",             3 }
    },
    [ "doctor" ] = {
        { "af_medusa_dyn2d",            1,  "lvl2",             1  },
        { "af_vyvert_dyn2d",            1,  "lvl2",             1  },
        { "af_blood_dyn2d",             1,  "lvl2",             1  },
        { "af_electra_sparkler_dyn2d",  1,  "lvl2",             1  },
        { "af_drops_dyn2d",             1,  "lvl2",             1  },
        { "af_ameba_slime_dyn2d",       1,  "lvl2",             1  },
        { "af_rusty_thorn_dyn2d",       1,  "lvl2",             1  }
    },
    [ "dan" ] = {
        { "ammo_12x70_buck",            10, "mutant_dog_tail",        8  },
        { "ammo_12x70_buck",            4,  "mutant_face_tushkano",   4  },
        { "ammo_12x76_dart",            4,  "mutant_boar_leg",        8  },
        { "ammo_12x76_zhekan",          2,  "mutant_flesh_eye",       3  },
        { "ammo_12x76_dart",            3,  "mutant_psevdodog_tail",  3  },
        { "ammo_7.62x39_ap",            4,  "mutant_tail_cat",        3  }
    },
    [ "fuel_esc" ] = {
        { "ammo_9x18_pmm",              6,  "amk_kanistra",     1  },
        { "medkit",                     4,  "amk_kanistra",     1  },
        { "ammo_7.62x39_fmj",           2,  "amk_kanistra",     1  },
        { "vodka",                      4,  "amk_kanistra",     1  },
        { "conserva",                   5,  "amk_kanistra",     1  },
        { "ammo_5.45x39_fmj",           3,  "amk_kanistra",     1  },
        { "ammo_12x70_buck",            4,  "amk_kanistra",     1  },
        { "antirad",                    2,  "amk_kanistra",     1  },
        { "repair_item_weapon_feik",    2,  "amk_kanistra",     1  },
        { "repair_itemoutfit_feik",     2,  "amk_kanistra",     1  }
    },
    [ "fuel_bar" ] = {
        { "ammo_9x19_pbp",              5,  "amk_kanistra",     1  },
        { "medkit_army",                3,  "amk_kanistra",     1  },
        { "ammo_7.62x39_fmj",           3,  "amk_kanistra",     1  },
        { "vodka",                      5,  "amk_kanistra",     1  },
        { "conserva",                   6,  "amk_kanistra",     1  },
        { "ammo_5.45x39_fmj",           4,  "amk_kanistra",     1  },
        { "ammo_12x70_buck",            5,  "amk_kanistra",     1  },
        { "antirad",                    3,  "amk_kanistra",     1  },
        { "repair_item_weapon_feik",    3,  "amk_kanistra",     1  },
        { "repair_itemoutfit_feik",     3,  "amk_kanistra",     1  }
    },
    [ "sultan" ] = {
        { "wpn_beretta93",              1,  "lvl5",             1  },
        { "wpn_ump45",                  1,  "lvl5",             1  },
        { "wpn_pp19",                   1,  "lvl6",             1  },
        { "wpn_saiga12c_m1",            1,  "lvl8",             1  },
        { "wpn_saiga12c",               1,  "lvl6",             1  },
        { "wpn_mp153",                  1,  "lvl7",             1  },
        { "wpn_ak104",                  1,  "lvl7",             1  },
        { "wpn_ak108",                  1,  "lvl6",             1  },
        { "wpn_sv98",                   1,  "lvl7",             1  },
        { "wpn_awm",                    1,  "lvl8",             1  },
        { "wpn_svd",                    1,  "lvl7",             1  },
        { "wpn_m16a4",                  1,  "lvl6",             1  },
        { "wpn_m110",                   1,  "lvl7",             1  },
        { "wpn_rpk74",                  1,  "lvl5",             1  },
        { "wpn_addon_sil_9_p",              1,  "lvl5",         1  },   -- глушитель 9mm
        { "wpn_addon_sil_545_ar",           1,  "lvl5",         1  },   -- глушитель 5.45
        { "wpn_addon_sil_556_ar",           1,  "lvl5",         1  },   -- глушитель 5.56
        { "wpn_addon_sil_762_ar",           1,  "lvl5",         1  },   -- глушитель 7.62х39
        { "wpn_addon_sil_762_sr2",          1,  "lvl6",         1  },   -- глушитель 7.62х51 нато
        { "wpn_addon_sil_762_sr1",          1,  "lvl6",         1  },   -- глушитель 7.62х54
        { "wpn_addon_sil_mosin",            1,  "lvl5",         1  },   -- глушитель к винтовке Мосина
        { "wpn_addon_grenade_launcher",     1,  "lvl5",         1  },   -- подствол гп25
        { "wpn_addon_grenade_launcher_m203",1,  "lvl5",         1  },   -- подствол нато
        { "wpn_addon_cobra",                1,  "lvl5",         1  },   -- коллиматор Кобра
        { "wpn_addon_1p78",                 1,  "lvl6",         1  },   -- прицел 1п78
        { "wpn_addon_1pso",                 1,  "lvl7",         1  },   -- прицел ПСО1
        { "wpn_addon_eotech",               1,  "lvl5",         1  },   -- коллиматор Эотеч
        { "wpn_addon_acog",                 1,  "lvl7",         1  },   -- прицел Элкан
        { "wpn_addon_mt",                   1,  "lvl8",         1  }    -- прицел МТ
    },
    [ "sidor" ] = {
        { "ammo_12x70_buck",            3,  "lvl1",             1  },
        { "ammo_12x76_dart",            2,  "lvl1",             1  },
        { "wpn_bm16",                   1,  "lvl2",             1  },
        { "wpn_toz34",                  1,  "lvl2",             2  },
        { "medkit",                     7,  "lvl2",             1  },
        { "medkit",                     3,  "lvl1",             1  },
        { "vodka",                      3,  "lvl1",             1  },
        { "antirad",                    3,  "lvl2",             1  },
        { "repair_item_weapon_feik",    5,  "lvl2",             1  },
        { "repair_itemoutfit_feik",     5,  "lvl2",             1  },
        { "repair_boxoutfit",           1,  "lvl1",             2  }
    },
    [ "barman" ] = {
        { "ammo_12x76_dart",            3,  "lvl2",             1  },
        { "wpn_glock",                  1,  "lvl2",             3  },
        { "wpn_wincheaster1300",        1,  "lvl2",             4  },
        { "medkit",                     5,  "lvl2",             1  },
        { "vodka",                      7,  "lvl2",             1  },
        { "antirad",                    2,  "lvl2",             1  },
        { "repair_item_weapon_feik",    4,  "lvl2",             1  },
        { "repair_itemoutfit_feik",     4,  "lvl2",             1  },
        { "repair_boxoutfit",           1,  "lvl2",             1  }
    },
    [ "petrenko" ] = {
        { "ammo_7.62x54_7h1",           2,  "lvl2",             1  },
        { "ammo_9x39_pab9",             3,  "lvl2",             1  },
        { "ammo_9x39_sp5",              2,  "lvl2",             1  },
        { "dolg_scientific_outfit",     1,  "lvl3",             4  },
        { "wpn_aps",                    1,  "lvl3",             2  },
        { "wpn_vintorez",               1,  "lvl4",             2  },
        { "wpn_val",                    1,  "lvl4",             2  },
        { "wpn_addon_cobra",            1,  "bearer_cheque",    2  },
        { "wpn_addon_sil_9_p",          1,  "bearer_cheque",    2  },
        { "wpn_addon_sil_545_ar",       1,  "bearer_cheque",    2  },
        { "wpn_addon_sil_762_ar",       1,  "bearer_cheque",    2  },
        { "wpn_addon_sil_762_sr1",      1,  "bearer_cheque",    3  },
        { "wpn_addon_sil_mosin",        1,  "bearer_cheque",    2  }
    },
    [ "mihalych" ] = {
        { "ammo_m209",                 10,  "lvl3",             1  },
        { "ammo_7.62x54_7h14",          4,  "lvl3",             1  },
        { "ammo_7.62x39_ap",            8,  "lvl3",             1  },
        { "ammo_5.45x39_ap",           10,  "lvl3",             1  },
        { "ammo_5.56x45_ap",            9,  "lvl3",             1  },
        { "medkit_scientic",            4,  "lvl3",             1  },
        { "antirad",                    3,  "lvl2",             1  },
        { "repair_item_weapon_feik",    1,  "lvl1",             1  },
        { "repair_itemoutfit_feik",     1,  "lvl1",             1  }
    },
    [ "shinkar" ] = {
        { "ammo_5.56x45_ss190",         7,  "lvl2",             1  },
        { "ammo_5.56x45_ap",            5,  "lvl2",             1  },
        { "ammo_12x76_zhekan",          2,  "lvl2",             1  },
        { "wpn_sig550",                 1,  "lvl3",             2  },
        { "wpn_spas12",                 1,  "lvl3",             3  },
        { "wpn_saiga12c",               1,  "lvl3",             3  },
        { "repair_item_weapon_feik",    6,  "lvl3",             1  },
        { "repair_itemoutfit_feik",     6,  "lvl3",             1  }
    },
    [ "kuzya" ] = {
        { "ammo_5.45x39_fmj",           4,  "vodka",            5  },
	  --{ "ammo_7.62x39_fmj",           3,  "vodka",            5  },
        { "grenade_rgd5",               1,  "vodka",            2  },
        { "razgruzka",                  1,  "vodka",            5  },
        { "wpn_fort",                   1,  "vodka",            7  },
        { "wpn_ak74u",                  1,  "vodka",            10 },
        { "wpn_ak74pbn",                1,  "vodka",            15 },
        { "medkit_army",                1,  "vodka",            2  }
    },
    [ "sherstuk" ] = {
        { "ammo_5.45x39_ap",            3,  "vodka",            5  },
        { "ammo_7.62x39_ap",            3,  "vodka",            6  },
        { "grenade_f1",                 1,  "vodka",            3  },
        { "specops_outfit",             1,  "vodka",            20 },
        { "wpn_abakan",                 1,  "vodka",            20 },
        { "wpn_fort_m1",                1,  "vodka",            12 },
        { "medkit_army",                2,  "vodka",            3  },
        { "suhpay",                     1,  "vodka",            4  }
    },
    [ "zhila" ] = {
        { "ammo_7.62x39_fmj",           3,  "conserva",         6  },
        { "ammo_9x19_pbp",              1,  "energy_drink",     2  },
        { "wpn_aks47",                  1,  "conserva",         20 },
        { "wpn_mp5",                    1,  "green_kolbasa",    12 },
        { "vodka",                      1,  "conserva",         3  },
        { "repair_item_weapon_feik",    1,  "bread",            10 },
        { "repair_itemoutfit_feik",     1,  "energy_drink",     3  },
        { "device_pda_npc",             1,  "green_kolbasa",    8  }
    },
    [ "vahtang" ] = {
        { "ammo_7.62x51_fmj",           3,  "device_pda_npc",   5  },
        { "ammo_7.62x51_ap",            2,  "device_pda_npc",   5  },
        --{ "wpn_g36c",                   1,  "device_pda_npc",   15 },
        { "wpn_g36",                    1,  "device_pda_npc",   18 },
        { "wpn_fn2000",                 1,  "device_pda_npc",   22 },
        { "wpn_addon_eotech",           1,  "bearer_cheque",    2  },
        { "wpn_addon_sil_556_ar",       1,  "bearer_cheque",    2  },
        { "wpn_addon_sil_762_sr2",      1,  "bearer_cheque",    3  },
        { "medkit_scientic",            1,  "device_pda_npc",   3  },
        { "killer_gaz_outfit_m1",       1,  "device_pda_npc",   12 },
        { "outfit_killer_m1",           1,  "device_pda_npc",   16 },
        { "merc_scientific_outfit",     1,  "device_pda_npc",   30 }
    },
    [ "eger" ] = {
        { "mutant_psevdodog_tail",      1,  "ammo_12x76_dart",   3  },
        { "mutant_snork_leg",           1,  "ammo_12x76_dart",   5  },
        { "mutant_krovosos_jaw",        1,  "ammo_12x76_dart",   8  },
        { "mutant_poltergeist_glas",    1,  "ammo_12x76_zhekan", 8  },
        { "mutant_hand_kontroler",      1,  "ammo_12x76_zhekan", 10 },
        { "mutant_psevdogigant_hand",   1,  "ammo_12x76_zhekan", 15 }
    }
}

local sultan_treasure = {
    9127, "На Кордоне на территории южного блок поста в кустах ящик с оружием. С вояками лучше не связывайся - тихонько обойди с восточной стороны, через поваленное дерево. Там первый же куст - твой.",
    9128, "На болоте есть старая дорога от мехдвора на запад. На дороге  стоит камаз, вот в кузове и посмотри... Зверья там полно - без хорошего снаряжения не суйся...",
    9129, "На болоте старый рыбацкий хутор есть, ещё водонапорная башня стоит рядом... Так возле этой башни есть подвальчик, там и посмотри... Только будь осторожен - в подвальчике сильная радиация..."
}

local zub_price_sect, zub_price_amnt
local ini        = system_ini()
local actor      = db.actor
local clr_green  = { 255, 166, 226, 46  }
local clr_red    = { 255, 249, 138, 114 }
local clr_orange = { 255, 255, 176, 20  }
local clr_cyan   = { 255, 102, 217, 239 }
local clr_violet = { 255, 174, 129, 255 }
local clr_white  = { 255, 255, 255, 255 }
local clr_black  = { 255, 39,  40,  34  }

---------------------------------------------------------------------------------------------------------------

class "barter_screen_ui"( CUIScriptWnd )

function barter_screen_ui:__init( owner, baryga ) super()
    self.b_name = baryga
    self.owner  = owner
    _dialog     = self
    self:InitControls()
    self:InitCallBacks()
    self:FillList()
end

function barter_screen_ui:__finalize() end

function barter_screen_ui:InitControls()
    self:Init( 0, 0, 1024, 768 )
    local xml = CScriptXmlInit()
    local ctrl
    xml:ParseFile( "ui_barter_new.xml" )
    self.xml     = xml
    self.dialog  = xml:InitStatic( "main_dialog:dialog", self )
    self.cap_wnd = make_static(
        "cap_wnd", self, tbl_npc_name_koeff[ self.b_name ][ 2 ], 251, 140, 260, 39
    )
    self.cap_wnd:SetTextColor( unpack( clr_orange ) )
    self.cap_wnd:SetFont( GetFontGraffiti19Russian() )
    self.cap_price = make_static( "cap_price", self, "Цена вопроса:", 251, 420, 200, 39 )
    self.cap_price:SetTextColor( unpack( clr_orange ) )
    self.cap_price:SetFont( GetFontGraffiti19Russian() )
    self:Register( xml:Init3tButton( "btn_ok",     self ), "btn_ok"     )
    self:Register( xml:Init3tButton( "btn_cancel", self ), "btn_cancel" )
    xml:InitFrame( "main_dialog:price_bg",   self.dialog )
    xml:InitFrame( "main_dialog:list_frame", self.dialog )
    ctrl = xml:InitList( "main_dialog:list", self.dialog )
    ctrl:ShowSelectedItem( true )
    self:Register( ctrl, "list_window" )
    self.message_box = CUIMessageBoxEx()
    self:Register( self.message_box,"message_box" )
    self.descr_scroll = xml:InitScrollView( "descr_scroll", self )
end

function barter_screen_ui:InitCallBacks()
    self:AddCallback( "btn_ok",      ui_events.BUTTON_CLICKED,          self.OnBtnOk,              self )
    self:AddCallback( "btn_cancel",  ui_events.BUTTON_CLICKED,          self.OnBtnCancel,          self )
    self:AddCallback( "list_window", ui_events.LIST_ITEM_CLICKED,       self.OnListItemClicked,    self )
    self:AddCallback( "message_box", ui_events.MESSAGE_BOX_YES_CLICKED, self.OnMsgYes,             self )
end

function barter_screen_ui:FillList()
    local list = self:GetListWnd( "list_window" )
    if list:GetSize() > 0 then list:RemoveAll() end
    self.work_tbl = make_list_by_trader( self.b_name )
    for k, v in pairs( self.work_tbl ) do
        local item_name   = v[ 1 ]
        local item_amount = v[ 2 ]
        if strposx( item_name, "ammo_" ) then
            item_amount = item_amount * utils.cfg_get_number( ini, item_name, "box_size", nil, false, 1 )
        end
        self:AddItemToList( item_name, item_amount )
    end
end

function barter_screen_ui:on_quit()
    if self then
        local holder = self:GetHolder()
        if holder then holder:start_stop_dialog( self, true ) end
        level.destroy_dialog( self )
    end
    _dialog = nil
end

function barter_screen_ui:OnMsgYes()
    local count = 0
    for _ in pairs( self.work_tbl ) do count = count + 1 end
    local list = self:GetListWnd( "list_window" )
    local itm_index = list:GetSelectedItem()
    if itm_index < 0 or count < itm_index + 1 then return end
    if self.msgbox_id == 1 then
        local sect = self.work_tbl[ itm_index + 1 ][ 1 ]
        local tip  = 0
        for k, v in pairs ( barter_tbl.sultan ) do
            if sect == v[ 1 ] then tip = k end
        end
        nlc_vars.sultan_weapon = tip
        actor:give_info_portion( "sultan_weapon_starting" )
    end
    self.msgbox_id = 0
    self:on_quit()
end

function barter_screen_ui:OnBtnOk()
    local count = 0
    local list  = self:GetListWnd( "list_window" )
    for _ in pairs( self.work_tbl ) do count = count + 1 end
    if list:GetSize() == 0 then return end
    local itm_index = list:GetSelectedItem()
    if itm_index < 0 or count < itm_index + 1 then return
    else
        if self.b_name == "sultan" then
            self.msgbox_id = 1
            self.message_box:Init( "msg_box_confirm_sultan" )
            self:GetHolder():start_stop_menu( self.message_box, true )
        else
            self:DoBarter( itm_index + 1 )
            self:UpdatePriceStatic()
        end
    end
end

function barter_screen_ui:OnBtnCancel()
    self:on_quit()
end

function barter_screen_ui:OnListItemClicked()
    local count = 0
    local list  = self:GetListWnd( "list_window" )
    if list:GetSize() == 0 then return end
    local itm_index = list:GetSelectedItem()
    for _ in pairs( self.work_tbl ) do count = count + 1 end
    if itm_index < 0 or count < itm_index + 1 then return end
    if self.pict    then self:DetachChild( self.pict    ) end
    if self.pict_bg then self:DetachChild( self.pict_bg ) end
    if self.descr   then
        self.descr_scroll:Clear()
        self.descr:DetachFromParent()
    end
    self.price_tbl   = self.work_tbl[ itm_index + 1 ][ 3 ]
    self.price_amnt  = self.work_tbl[ itm_index + 1 ][ 4 ]
    if strposx( self.price_tbl, "ammo_" ) then
        self.price_amnt = self.price_amnt * utils.cfg_get_number(
                                                ini, self.price_tbl, "box_size", nil, false, 1
                                            )
    end
    if self.b_name ~= "zub" then
        if not strposx( self.work_tbl[ itm_index + 1 ][ 1 ], "lvl" ) then
            local sizes  = give_icon_params( self.work_tbl[ itm_index + 1 ][ 1 ] )
            local px     = 440 + ( 182 - ( sizes.width  * 0.26 * 1.2 ) )                        -- 0.26 для 1:1 на 1920
            local py     = 118 + ( 128 - ( sizes.height * 0.32 * 1.2 ) )                        -- 0.32 для 1:1 на 1920
            self.pict_bg = make_static( "pict_bg", self, false, 507, 179, 229, 146 )
            self.pict_bg:InitTexture( "ui\\ui_unique_weapon" )
            self.pict_bg:SetOriginalRect( 350, 454, 348, 150 )
            self.pict_bg:SetStretchTexture( true )
            self.pict = make_static(
                "pict", self, false, px, py,
                ( sizes.width * 0.52 * 1.2 ), ( sizes.height * 0.64 * 1.2 )
            )
            if sizes.icon_group == 0 then
                self.pict:InitTexture( "ui\\ui_icon_equipment" )
            else
                self.pict:InitTexture( "ui\\ui_icon_equipment_" .. sizes.icon_group )
            end
            self.pict:SetOriginalRect( sizes.x, sizes.y, sizes.width, sizes.height )
            self.pict:SetStretchTexture( true )
            self.descr = self.xml:InitStatic( "descr_list", self.descr_scroll )
            self.descr:SetText( sizes.description )
            self.descr:SetTextComplexMode( true )
            self.descr:AdjustHeightToText()
        end
    end
    self:UpdatePriceStatic()
end

function barter_screen_ui:UpdatePriceStatic()
    local have_amount = 0
    local price_color = clr_red
    if self.price then self:DetachChild( self.price ) end
    if self.price_have then self:DetachChild( self.price_have ) end
    local price_text = ""
    if self.b_name == "zub" then
        if     self.price_tbl == "lvl1" then
            zub_price_sect = "lvl1"
            zub_price_amnt = 3
        elseif self.price_tbl == "lvl2" then
            zub_price_sect = "lvl2"
            zub_price_amnt = 2
        elseif self.price_tbl == "lvl3" then
            zub_price_sect = "lvl3"
            zub_price_amnt = 1
        elseif self.price_tbl == "lvl4" then
            zub_price_sect = "lvl3"
            zub_price_amnt = 2
        else
            zub_price_sect = "lvl4"
            zub_price_amnt = 1
        end
        price_text  = tbl_translate_price[ zub_price_sect ] .. ", " .. tostring( zub_price_amnt ) .. " шт."
        have_amount = gg_n_artof_m_have( self.price_amnt, tbl_translate_arts[ zub_price_sect ], true )
        if have_amount >= zub_price_amnt then price_color = clr_green end
    else
        if strposx( self.price_tbl, "lvl" ) then
            price_text = tbl_translate_price[ self.price_tbl ]
        else
            price_text = game.translate_string( utils.cfg_get_string( ini, self.price_tbl, "inv_name", nil, false, "" ) )
        end
        price_text = price_text .. ", " .. tostring( self.price_amnt ) .. " шт."
        if strposx( self.price_tbl, "lvl" ) then
            have_amount = gg_n_artof_m_have( self.price_amnt, tbl_translate_arts[ self.price_tbl ], true )
        elseif str_in_tab( self.price_tbl, { "ammo_", "energy_drink" } ) then
            have_amount = test.count_actor_ammo( self.price_tbl )
        else
            have_amount = sak.calc_items_count( self.price_tbl, nil )
        end
        if have_amount >= self.price_amnt then price_color = clr_green end
    end
    if self.b_name == "sultan" then price_color = clr_white end
    self.price = make_static( "price", self, tostring( price_text ), 252, 456, 170, 82 )
    self.price:SetTextColor( unpack( price_color ) )
    self.price_have = make_static( "price_have", self, "( " .. tostring( have_amount ) .. " )", 425, 456, 40, 82 )
    self.price_have:SetTextColor( unpack( price_color ) )
end

function barter_screen_ui:AddItemToList( item_name, item_amount )
    local _itm = load_item()
    local list = self:GetListWnd( "list_window" )
    local itm_name, amnt = "<<ERROR>>", ""
    if self.b_name == "zub" then
        for k, v in pairs( sak_artmods.artmod_resiepts ) do
            for i = 1, #v do
                if v[ i ] == item_name then
                    itm_name = game.translate_string( sak_artmods.artmod_resiepts[ k ][ 7 ] )
                end
            end
        end
        for k, v in pairs( sak_artmods.amk_resiepts ) do
            for i = 1, #v do
                if v[ i ] == item_name then
                    itm_name = game.translate_string( sak_artmods.amk_resiepts[ k ][ 3 ] )
                    _itm.fn:SetTextColor( unpack( clr_cyan ) )
                end
            end
        end
    else
        if strposx( item_name, "lvl" ) then
            if self.b_name == "silvestr" then
                if item_name == "lvl3" then
                    itm_name = "Арт. 3 уровня подпорченный"
                elseif item_name == "lvl4" then
                    itm_name = "Арт. 'пустышка' подпорченный"
                else
                    itm_name = tbl_translate_price[ item_name ]
                end
            else
                itm_name = tbl_translate_price[ item_name ]
            end
        else
            itm_name = game.translate_string(
                utils.cfg_get_string( ini, item_name, "inv_name", nil, false, "" )
            )
        end
    end
    if item_amount > 1 then amnt = tostring( item_amount ) .. " шт." end
    _itm.fn:SetText( itm_name )
    _itm.fa:SetText( amnt )
    list:AddItem( _itm )
end

function barter_screen_ui:DoBarter( ind )
    local count = 0
    local list  = self:GetListWnd( "list_window" )
    if list:GetSize() == 0 then return end
    local itm_index = list:GetSelectedItem()
    for _ in pairs( self.work_tbl ) do count = count + 1 end
    if itm_index < 0 or count < itm_index + 1 then return end
    local tovar       = self.work_tbl[ ind ][ 1 ]
    local tovar_amnt  = self.work_tbl[ ind ][ 2 ]
    local need_amount = self.work_tbl[ ind ][ 4 ]
    local need_sect   = self.work_tbl[ ind ][ 3 ]
    if self.b_name == "zub" then
        need_amount = zub_price_amnt
        need_sect   = zub_price_sect
    end

    if strposx( need_sect, "lvl" ) then
        if gg_n_artof_m_have( need_amount, tbl_translate_arts[ need_sect ] ) then
            give_n_artof_m( need_amount, tbl_translate_arts[ need_sect ] )
            if self.b_name == "zub" then
                test.sms_recipt_found( tovar )
                actor:give_info_portion( tovar )
            elseif self.b_name == "menyala" then
                local mobj = misc.spawn_to( tovar, actor )
                misc.process_spawn()
                sak.relocate_item( actor, "in", tovar, tovar_amnt )
                params.upd_condition( mobj.id, ( dsh.get_next_random( "generic_rnd", 40, 70 ) / 100 ) )
            else
                sak.create_items( actor, tovar, tovar_amnt )
            end
            misc.process_spawn()
        end
    elseif str_in_tab( need_sect, { "ammo_", "energy_drink" } ) then
        if vergas_lib.search_items( need_sect, self.price_amnt, 1 ) ~= false then
            vergas_lib.search_items( need_sect, self.price_amnt, 2 )
            if
                self.b_name == "eger"
                and str_in_tab( tovar, {
                    "mutant_poltergeist_glas",
                    "mutant_psevdogigant_hand",
                    "mutant_hand_kontroler"
                })
            then
                sak_dialog.add_bad_part(
                    tovar, ( dsh.get_next_random( "generic_rnd", 55, 85 ) / 100 )
                )
            else
                sak.create_items( actor, tovar, tovar_amnt )
            end
            misc.process_spawn()
        end
    else
        if sak.have_items_count( need_sect , need_amount ) then
            sak_inventory.release_actor_items( need_sect, need_amount )
            if tovar == "device_pda_npc" then
                for i = 1, tovar_amnt do mike.add_1_pda_npc() end
            elseif strposx( tovar, "lvl" ) then
                local art_tbl, art_sect = test.tbl_arts[ tovar ], ""
                art_sect = art_tbl[ dsh.get_next_random( "ui_barter_new.silvestr", #art_tbl ) ]
                if tovar == "lvl1" or tovar == "lvl2" or tovar == "lvl3" then
                    art_sect = art_sect .. "_dyn" .. tostring( dsh.get_next_random( "ui_barter_new.silvestr", 3, 4 ) ) .. "d"
                end
                if self.b_name == "silvestr" then
                    local sil_obj = misc.spawn_to( art_sect, actor )
                    misc.process_spawn()
                    params.upd_condition( sil_obj.id, ( dsh.get_next_random( "generic_rnd", 50, 70 ) / 100 ) )
                    sak.relocate_item( actor, "in", art_sect, tovar_amnt )
                else
                    sak.create_items( actor, art_sect, tovar_amnt )
                end
            else
                sak.create_items( actor, tovar, tovar_amnt )
            end
            misc.process_spawn()
            if self.b_name == "fuel_bar" then
                sak_dialog.give_money(2000,"in")
                sak_dialog.bar_kanistra_add()
                self:on_quit()
            elseif self.b_name == "fuel_esc" then
                sak_dialog.give_money(2000,"in")
                sak_dialog.esc_kanistra_add()
                self:on_quit()
            elseif self.b_name == "pahom" then
                sak_dialog.add_nagrad_pahon()
                self:on_quit()
            end
        end
    end
end

-------------------------------------------------------------------------------------------------

class "load_item" ( CUIListItemEx )

function load_item:__init() super()
    self:SetWndRect( 0, 0, 233, 22 )
    -- bullet mark
    self.fb = CUIStatic  ()
    self.fb:SetAutoDelete( true )
    self:AttachChild     ( self.fb )
    self.fb:SetWndRect   ( 0, 0, 8, 22 )
    self.fb:SetFont      ( GetFontLetterica18Russian() )
    self.fb:SetTextColor ( unpack( clr_orange ) )
    self.fb:SetText      ( "• " )
    -- name
    self.fn = CUIStatic  ()
    self.fn:SetAutoDelete( true )
    self:AttachChild     ( self.fn )
    self.fn:SetWndRect   ( 8, 0, 175, 22 )
    self.fn:SetFont      ( GetFontLetterica18Russian() )
    self.fn:SetTextColor ( unpack( clr_white ) )
    -- amount
    self.fa = CUIStatic()
    self.fa:SetAutoDelete ( true )
    self:AttachChild      ( self.fa )
    self.fa:SetWndRect    ( 183, 0, 42, 22 )
    self.fa:SetFont       ( GetFontLetterica18Russian() )
    self.fa:SetTextColor  ( unpack( clr_orange ) )
end

-------------------------------------------------------------------------------------------------

function give_icon_params( sect )
    local t = {}
    t.icon_group  = utils.cfg_get_number( ini, sect, "icon_group", nil, false, 0 )
    t.description = game.translate_string(
        utils.cfg_get_string( ini, sect, "description", nil, false, "" )
    )
    if ini and ini:section_exist( sect ) then
        t.width       = ini:r_float( sect, "inv_grid_width"  ) * 50 or 176
        t.height      = ini:r_float( sect, "inv_grid_height" ) * 50 or 78
        t.x           = ini:r_float( sect, "inv_grid_x"      ) * 50 or 0
        t.y           = ini:r_float( sect, "inv_grid_y"      ) * 50 or 0
    else
        t.description = ""
        t.icon_group  = 0
        t.width       = 176
        t.height      = 78
        t.x           = 0
        t.y           = 0
    end
    return t
end

function barter_screen( name )
    local hud = barter_screen_ui( get_hud(), name )
    level.start_stop_menu( hud, true )
end

function make_list_by_trader( name )
    local tmptbl1, tmptbl2, tbl_, tbl__ = {}, {}, {}, {}
    local tbl_to_show = {}
    local ttt         = 1
    local ind         = 0
    local gdays       = timers.Get_Game_Days() or 1
    -----------------------------------------------------------------------------
    if name == "silvestr" then
        local tbl_silvestr = test.copy_tbl( barter_tbl[ name ] )
        if dsh.get_fixed_random( "silvestr_tbl", gdays, 1, 3 ) == 3 then
            for k, v in pairs( tbl_silvestr ) do
                if not strposx( v[ 1 ], "lvl" ) then
                    v[ 2 ] = v[ 2 ] + 1
                end
                if v[ 1 ] == "lvl3" then v[ 1 ] = "lvl4" end
            end
        end
        tbl_to_show = tbl_silvestr
    -----------------------------------------------------------------------------
    elseif name == "pahom" then
        for k, v in pairs ( barter_tbl[ name ] )  do
            ind = ind + 1
            if ind < 3 then
                table.insert( tmptbl1, v )
            else
                table.insert( tmptbl2, v )
            end
        end
        tbl_  = tmptbl1
        tbl__ = generate_rnd_list( tmptbl2, 26, 24, 3, 5 )
        for k, v in pairs( tbl__ ) do table.insert( tbl_, v ) end
        tbl_to_show = tbl_
    -----------------------------------------------------------------------------
    elseif name == "sultan" then
        for k, v in pairs ( barter_tbl[ name ] )  do
            ind = ind + 1
            if ind < 15 then
                table.insert( tmptbl1, v )
            else
                table.insert( tmptbl2, v )
            end
        end
        tbl_  = generate_rnd_list( tmptbl1, 97, 24, 3, 6 )
        tbl__ = generate_rnd_list( tmptbl2, 96, 24, 4, 6 )
        for k, v in pairs( tbl__ ) do table.insert( tbl_, v ) end
        tbl_to_show = tbl_
    -----------------------------------------------------------------------------
    elseif name == "dan" then
        local tbl_dan = test.copy_tbl( barter_tbl[ name ] )
        for k, v in pairs( tbl_dan ) do
            if v[ 3 ] == "mutant_dog_tail" then
                v[ 2 ] = v[ 2 ] - math.floor( gdays / 10 )      -- инфляция: хвостов собак каждые 10 дней дают на 10 меньше дроби
                if v[ 2 ] < 4 then v[ 2 ] = 4 end               -- до 4 пачек за 10 хвостов
            elseif str_in_tab( v[ 3 ], {
                        "mutant_psevdodog_tail",
                        "mutant_face_tushkano",
                        "mutant_tail_cat"
                    })
            then
                v[ 2 ] = v[ 2 ] - math.floor( gdays / 20 )      -- каждые 20 дней
                if v[ 2 ] < 1 then v[ 2 ] = 1 end
            end
        end
        tbl_to_show = tbl_dan
    -----------------------------------------------------------------------------
    elseif name == "zub" then
        for k, v in pairs( test.tbl_recipt ) do
            ttt = k
            ind = tonumber( k:sub( 4, 5 ) )
            if ind <= 4 then
                for i = 1, #v do
                    table.insert( tmptbl1, { v[i], 1, ttt, 1 } )
                end
            else
                for i = 1, #v do
                    table.insert( tmptbl2, { v[i], 1, ttt, 1 } )
                end
            end
        end
        tbl_  = generate_rnd_list( tmptbl1, 98, 6, 3 )
        tbl__ = generate_rnd_list( tmptbl2, 99, 6, 2 )
        for k, v in pairs( tbl__ ) do table.insert( tbl_, v ) end
        tbl_to_show = tbl_
    -----------------------------------------------------------------------------
    elseif name == "menyala" then
        tbl_to_show = generate_rnd_list(
            barter_tbl[ name ], tbl_npc_name_koeff[ name ][ 1 ], 6, 4, 6
        )
    -----------------------------------------------------------------------------
    elseif name == "fuel_esc" or name == "fuel_bar" then
        tbl_to_show = generate_rnd_list(
            barter_tbl[ name ], tbl_npc_name_koeff[ name ][ 1 ], 24, 3, 6
        )
    -----------------------------------------------------------------------------
    elseif strposx( name, "sid_mod" ) then
        tbl_to_show = generate_rnd_list(
            barter_tbl[ name ], tbl_npc_name_koeff[ name ][ 1 ], 24, 5, 7
        )
    -----------------------------------------------------------------------------
    else
        tbl_to_show = barter_tbl[ name ]
    end
    -----------------------------------------------------------------------------
    return tbl_to_show
end

function generate_rnd_list( table_in, npc_koeff, r_update, min, max )
    local t, table_out = {}, {}
    local day          = timers.Get_Game_Days() or 1
    local day_time     = 0
    if  actor:has_info( "time_morning" ) then day_time = 0
    elseif
        actor:has_info( "time_evening" ) then day_time = 2
    elseif
        actor:has_info( "time_night"   ) then day_time = 3
    elseif
        actor:has_info( "time_day"     ) then day_time = 1
    end
    if     r_update == 12 then day = day + math.floor( day_time / 2 )
    elseif r_update == 6  then day = day + day_time
    end
    for k, v in pairs( table_in ) do table.insert( t, v[ 1 ] ) end
    local t_out  = {}
    local t_used = 0
    local t_max
    if max == nil then
        t_max = min
    else
        t_max = dsh.get_fixed_random(
            "ui_barter_new.generate_rnd_list." .. npc_koeff, day, min, max
        )
    end
    for i = 1, t_max do
        t_used = ( t_used == t_max and 0 or t_used ) + 1
        local index = dsh.get_fixed_random(
            "ui_barter_new.generate_rnd_list." .. npc_koeff, day + i, t_used, #t
        )
        local value = t[ index ]
        t[ t_used ], t[ index ] = value, t[ t_used ]
        t_out[ i ] = t[ i ]
    end
    local ind = 0
    for i = 1, #t_out do
        for k, v in pairs ( table_in ) do
            if t_out[ i ] == v[ 1 ] then
                table.insert( table_out, table_in[ k ] )
                ind = ind + 1
            end
        end
    end
    return table_out
end

function need_sultan_weapon_art( sect )
    local min_art = tonumber( sect:sub( 4 ) )
    local tip     = nlc_vars.sultan_weapon or 0
    for k, v in pairs ( barter_tbl.sultan ) do
        local comp_art = tonumber( v[ 3 ]:sub( 4 ) )
        if k == tip and min_art >= comp_art then return true end
    end
    return false
end

function load_sultan_weapon_treasure()
    local tip           = nlc_vars.sultan_weapon or 0
    local rand_treasure = dsh.get_next_random(
        "ui_barter_new.load_sultan_weapon_treasure", 1, 3
    )
    local obj = g_sim:story_object( sultan_treasure[ rand_treasure * 2 - 1 ] )
    if tip ~= 0 and obj then
        local sect = barter_tbl.sultan[ tip ][ 1 ]
        misc.spawn_to( sect, obj )
        -- попробуем по имени секции заспавнить всех доступных патронов по пачке:
        local ammo_tbl = se_respawn.parse_names(
            utils.cfg_get_string( ini, sect, "ammo_class", false, false, false, "" )
        )
        if ammo_tbl ~= nil then
            for i = 1, #ammo_tbl do
                if
                    not strposx( ammo_tbl[ i ], "_merc" )
                    and ammo_tbl[ i ] ~= "ammo_ak"
                then
                    misc.spawn_to( ammo_tbl[ i ], obj )
                end
            end
        end
        -----------------------------------------------------------------------
        actor:give_talk_message(
            "%c[255,216,186,140]" .. sultan_treasure[ rand_treasure * 2 ],
            "ui\\ui_iconsTotal", Frect():set( 0,0,0,0 ), "simple_answer_item"
        )
        actor:give_info_portion( "way_sultan_treasure_" .. rand_treasure )
        nlc_vars.sultan_weapon = nil
        actor:disable_info_portion( "sultan_weapon_starting" )
        test.add_box_protection( obj:name() )
    end
end

function load_sultan_weapon_story()
    local tip = nlc_vars.sultan_weapon or 0
    if tip ~= 0 then
        actor:give_talk_message(
            "%c[255,216,186,140]" .. game.translate_string( tbl_translate_price[ barter_tbl.sultan[ tip ][ 3 ] ] ),
            "ui\\ui_iconsTotal", Frect():set( 0, 0, 0, 0), "simple_answer_item"
        )
    end
end

function make_static( name, own, text, x, y, width, height )
    local static = CUIStatic()
    static:SetWindowName( name )
    static:SetAutoDelete( true )
    if text then
        static:SetTextComplexMode( true )
        static:SetText( text )
    end
    static:Init( x, y, width, height )
    own:AttachChild( static )
    return static
end

function init_module()
    _dialog = nil
end

-- универсальная ф-ция для поиска артов у ГГ по входящей таблице
function gg_n_artof_m_have( n, table, flag )
    local amount    = 0
    local condition = 0.79
    for a = 1, #table do
        for i, k in pairs( sak_inventory.rucksack ) do
            if strpos( i, table[ a ], 1, true ) then
                local count = #k
                for m = 1, count do
                    local obj = client_obj( k[ m ] )
                    if obj:condition() >= condition then
						amount = amount + 1
                    end
                end
            end
        end
    end
    if flag == nil then
        if amount >= n then return true end
    else
        return amount
    end
end
-- универсальная ф-ция для отбора артов у ГГ по входящей таблице
function give_n_artof_m( n, table )
    local condition = 0.79
    for a = 1, #table do
        for i, k in pairs( sak_inventory.rucksack ) do
            if strpos( i, table[ a ], 1, true ) then
                for m = 1, #k do
                    local obj = client_obj( k[ m ] )
                    if obj:condition() >= condition then
						misc.release_obj( obj, true )
						sak.relocate_item( actor, "out", table[ a ], 1 )
                        n = n - 1
						if n == 0 then return end
                    end
                end
            end
        end
    end
end
