function load_schemes()
	load_scheme("xrs_grenade","grenadier",stype_stalker)
--	load_scheme("xrs_medic","medic",stype_stalker)
	load_scheme("xrs_armor","pick_armor",stype_stalker)
end

function disable_schemes(npc, stype)
	xrs_grenade.disable_scheme(npc, "grenadier")
--	xrs_medic.disable_scheme(npc, "medic")
	xrs_armor.disable_scheme(npc, "pick_armor")
end


function enable_schemes(ini, npc, stype, section)
	xrs_grenade.set_scheme(npc, ini, "grenadier", "grenadier")
--	xrs_medic.set_scheme(npc, ini, "medic", "medic")
	xrs_armor.set_scheme(npc, ini, "pick_armor", "pick_armor")
end

function actor_net_spawn(binder)
	xrs_grenade.net_spawn()
end

function actor_item_take(obj)
	xrs_grenade.fake_pickup(obj)
--	xrs_medic.pickup(obj)
end

function xrs_ai.actor_update(delta)
   xrs_grenade.update(delta)
   xrs_armor.update(delta)
end


function npc_net_destroy(npc)
--	xrs_medic.death_callback(npc)
end

function npc_death_callback(npc)
	xrs_grenade.death_callback(npc)
--	xrs_medic.death_callback(npc)
end

function npc_update(binder)
	local npc = binder.object
	if (npc:story_id()~=NONE_CL_SID and npc:story_id()~=NONE_SID) or not npc:alive() then return end
	xrs_grenade.npc_update(binder)
--	xrs_medic.npc_update(binder)
	xrs_armor.npc_update(binder)
end

function addCommonPrecondition(action)
	action:add_precondition(world_property(xrs_grenade.evid_crazy_grenadier, false))
	action:add_precondition(world_property(xrs_grenade.evid_aaa_grenade, false))
--	action:add_precondition(world_property(xrs_medic.evid_medic, false))
--	action:add_precondition(world_property(xrs_medic.evid_self_medic, false))
	action:add_precondition(world_property(xrs_armor.evid_armor, false))
end
