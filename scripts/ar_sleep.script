-- Модуль сна $DreamMod
-- --------------------

class "ar_sleep"(cse_alife_creature_actor)

function ar_sleep:__init(actor, storage)
  self.actor = actor
  self.st = storage
end

function ar_sleep:reset_scheme()
  local st = xr_logic.assign_storage_and_bind(actor, ini, scheme, section)
end

function ar_sleep:update()
  local ini = ini_file("scripts\\actorsleep.ltx")
  if db.storage[db.actor:id()].active_section~=death then
    _G[schemes["ar_sleep"]].set_scheme(self.actor, ini, "ar_sleep", death)
    db.storage[db.actor:id()].active_section = death
    db.storage[db.actor:id()].active_scheme = "ar_sleep"
  end
  local cond = xr_logic.cfg_get_condlist(ini, "death", "on_info", self.actor)
  xr_logic.pick_section_from_condlist(self.actor, self.actor, cond.condlist)
  if xr_build_id >= 5820 then ini:release() end 
end

function ar_sleep:death_callback(victim, who)
  cse_alife_creature_actor.on_death(self, -1)
  sleep_manager.stopper()
end

function add_to_binder(actor, ini, scheme, section, storage)
  local new_action = ar_sleep(actor, storage)
  xr_logic.subscribe_action_for_events(actor, storage, new_action)
end

function set_scheme(actor, ini, scheme, section)
  local st = xr_logic.assign_storage_and_bind(actor, ini, scheme, section)
  db.storage[db.actor:id()].active_scheme = "ar_sleep"
end

function disable_scheme()
  db.storage[db.actor:id()]["ar_sleep"] = nil
  db.storage[db.actor:id()].active_scheme = nil
  db.storage[db.actor:id()].active_section = nil
end