visual_effect = {
    [ "elektra"   ] = { "anomaly2\\electra2_blast_00",       "anomaly\\electra_blast1"         },
    [ "tramplin"  ] = { "amk_anoms\\bold_blast",             "anomaly\\anomaly_gravy_blast1"   },
    [ "voronka"   ] = { "anomaly2\\gravity_blast_final00",   "anomaly\\gravi_blowout6"         },
    [ "garka"     ] = { "static\\zharka_static",             "anomaly\\zhar_blow"              },
    [ "karusel"   ] = { "anomaly2\\gravi_zaxvat_myasorubka", "anomaly\\anomaly_mincer_blowout" },
    [ "holodec"   ] = { "anomaly2\\studen_blowout",          "anomaly\\buzz_hit"               },
    [ "g_puh"     ] = { "anomaly2\\pux_blast",               "anomaly\\pux_blast"              },
    [ "ice"       ] = { "amk\\snow",                         "anomaly\\ice"                    },
    [ "pustishka" ] = { "anomaly2\\snow\\blow_snow_01",      "anomaly\\anomaly_mincer_blowout" }
}

local ver_art               -- таблица id артов на земле
local flag_take_art         -- флаг поднятого арта
local hit_tbl               -- таблица типов наносимых хитов
local unit_hit = 0.1        -- минимальная доза наносимого хита
local counter_hit           -- счетчик нанесенных хитов
local flag_show_power       -- флаг задержки восстановления выносливости
local unit_time_power = 15  -- время задержки восстановления выносливости для одного хита (в игровых секундах)
local finish_time_power     -- время конца задержки восстановления выносливости (в игровых секундах)

function spawn_art()
    if g_sim == nil then abort( " alife simulator not assigned !" ) end
    ver_art = {}
    for i = 1, MAX_OBJ_ID do
        local obj = g_sim:object( i )
        if
            obj
            and obj.parent_id
            and obj.section_name
            and ( obj.parent_id == nil or obj.parent_id == BAD_OBJ_ID )
        then
            if
                string.sub( obj:section_name(), 1, 3 ) == "af_"
                and obj:section_name() ~= "af_full_akkum"
            then
                table.insert( ver_art, obj.id )
            end
        end
    end
end

function add_in_tbl( obj )
    if string.sub( obj:section_name(), 1 , 3 ) == "af_" then
        table.insert( ver_art, obj.id )
    end
end

function take_art( obj )
    local add_dmg = 0.1
    local sect    = obj:section()
    local actor   = db.actor
    -- для статистики:
    test.haldle_art_for_stats( sect, obj:id() )
    if obj:name() == "esc_af_medusa" then add_dmg = 0 end  -- чтобы первой же медузой не убило при новых дамагах
    if ver_art ~= nil and table.getn( ver_art ) ~= 0 then
        for i = 1, table.getn( ver_art ) do
            if ver_art[ i ] == obj:id() then
                flag_take_art = true
                ver_art[ i ] = 0
            end
        end
    end
    local result = false
    if flag_take_art then
        local art_particle, art_sound
        local m = lua_random()
        if m > 0.6 and strposx( obj:name(), "af_" ) then
            amk.drop_item( actor, obj )
        else
            result = not vergas_rucksack.drop_art( obj )
        end
        --определяю партикли
        local art_mama = vergas_lib.set_pr_from_config_str( sect, "art_mama" )
        art_particle   = particles_object( visual_effect[ art_mama ][ 1 ] )
        art_sound      = sound_object( visual_effect[ art_mama ][ 2 ] )
        if art_particle ~= nil and art_sound ~= nil then
            local act_pos   = actor:position()
            local dir       = device().cam_dir
            local a         = vector()
            a.y             = math.atan2( dir.x, dir.z )
            local xdelta    = math.sin( a.y )
            local zdelta    = math.cos( a.y )
            local pos_blast = sak.v3f(
                                ( act_pos.x + xdelta ),
                                ( act_pos.y + 0.6),
                                ( act_pos.z + zdelta)
                            )
            art_particle:play_at_pos( pos_blast )
            art_sound:play_at_pos( actor,pos_blast, 0 )
        end
        hit_tbl = vergas_lib.str_explode(
            ",", vergas_lib.set_pr_from_config_str( sect, "hit_type" ), true
        )
        unit_hit = vergas_lib.set_pr_from_config_str( sect, "unit_hit" ) or 0.02
        unit_hit = unit_hit + 0.01 * sak.dog_psy + add_dmg
        if vergas_masks.get_flag_mask() then     --при надетой маске по 87% от каждого хита из конфига
            unit_hit = unit_hit * 0.87
        end
        local armor = actor:item_in_slot( 6 )
        if armor then
            if strposx( armor:section(), "monolit" ) then  -- костюмы монолита тоже снижают хит.
                unit_hit = unit_hit * 0.8
            end
        end
        for _, sect in ipairs({
            "af_glassbeads_dyn1d",
            "af_glassbeads_dyn2d",
            "af_glassbeads_dyn3d",
            "af_glassbeads_dyn4d",
            "af_glassbeads_dyn5d",
        }) do
            if bind_monster.art_is_active( sect ) then
                unit_hit = unit_hit * lua_random( 3, 5 ) / 10
            end
        end
        if table.getn( hit_tbl ) ~= 0 then
            counter_hit = #hit_tbl
        else
            counter_hit = 0
        end
    else
        result = not vergas_rucksack.drop_art( obj )
    end
    if flag_take_art == false or flag_take_art == nil then
        local flag_id = 0
        if ver_art ~= nil then
            for i = 1, table.getn( ver_art ) do
                if ver_art[ i ] ~= 0 then flag_id = 1 end
            end
            if flag_id == 0 then ver_art = {} end
        end
    end
    return result
end

function take_art_update()
    if flag_take_art and counter_hit ~= 0 then
        db.actor.power = -1
        drawing_hits( hit_tbl[ counter_hit ] )
        counter_hit = counter_hit - 1
        if counter_hit == 0 then
            flag_take_art = false
            local hael = db.actor.health
            if test.sem_fucker == true then
                scheme_sem()
                test.sem_fucker = nil
            else
                if hael >= 0.75 then scheme_1()
                    elseif  hael >= 0.50 and hael < 0.75 then scheme_2()
                    elseif  hael >= 0.25 and hael < 0.50 then scheme_3()
                    elseif  hael <  0.25 then scheme_4()
                end
            end
            flag_show_power   = true
            finish_time_power = game.time() / 1000 + unit_time_power * table.getn( hit_tbl )
            hit_tbl = {}
            change_art_on_belt()
        end
    end
    if flag_show_power then show_power() end
end

function show_power()
    local current_time = game.time() / 1000
    if current_time < finish_time_power then
        db.actor.power = - 1
    else
        flag_show_power = false
    end
end

function drawing_hits( hit_type )
    local h     = hit()
    h.draftsman = db.actor
    h:bone( "bip01_spine" )
    if       hit_type == "fire_wound"    then h.type = hit.fire_wound
    elseif   hit_type == "wound"         then h.type = hit.wound
    elseif   hit_type == "strike"        then h.type = hit.strike
    elseif   hit_type == "telepatic"     then h.type = hit.telepatic
    elseif   hit_type == "radiation"     then h.type = hit.radiation
    elseif   hit_type == "chemical_burn" then h.type = hit.chemical_burn
    elseif   hit_type == "explosion"     then h.type = hit.explosion
    elseif   hit_type == "shock"         then h.type = hit.shock
    end
    h.power = unit_hit
    db.actor:hit( h )
    mike.takeup_mayatnik()
end

function scheme_sem()
    level.add_pp_effector( "fire_hit.ppe", 1031, false )
    level.add_cam_effector( "camera_effects\\head_shot.anm", 26, false, "" )
    local snd_rand = lua_random( 1, 7 )
    if snd_rand == 1 then
        vergas_lib.s_play( [[actor\arts_hit_2]], 1 )
    elseif snd_rand == 2 then
        vergas_lib.s_play( [[actor\arts_hit_3]], 1 )
    elseif snd_rand == 3 then
        vergas_lib.s_play( [[characters_voice\human_01\military\fight\hit\hit_5]], 1 )
    elseif snd_rand == 4 then
        vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_2]], 1 )
    elseif snd_rand == 5 then
        vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_6]], 1 )
    elseif snd_rand == 6 then
        vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_8]], 1 )
    elseif snd_rand == 7 then
        vergas_lib.s_play( [[characters_voice\human_01\freedom\fight\hit\hit_6]], 1 )
    end
    vergas_lib.s_play( [[anomaly\teleport_incoming]], 1 )
end

function scheme_1()
    level.add_cam_effector( "camera_effects\\surge_01.anm", 25, false, "" )  --резкий рывок вправо
    --level.add_pp_effector("1.ppe", 2001, false)  --через промежуток двоение в глазах и белое блинкование
    local snd_rand = lua_random( 1, 5 )
    if     snd_rand == 1 then vergas_lib.s_play( [[actor\arts_hit_1]], 1 )
    elseif snd_rand == 2 then vergas_lib.s_play( [[characters_voice\human_01\freedom\fight\hit\hit_1]], 1 )
    elseif snd_rand == 3 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_6]], 1 )
    elseif snd_rand == 4 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_8]], 1 )
    elseif snd_rand == 5 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_9]], 1 )
    end
end

function scheme_2()
    level.add_cam_effector( "camera_effects\\head_shot.anm", 26, false, "" )  --резко болтануло.
    --level.add_pp_effector("gar_ambush_hit.ppe", 2002, false)  --сначала двоится, потом полностью темнеет
    local snd_rand = lua_random( 1, 6 )
    if snd_rand     == 1 then vergas_lib.s_play( [[characters_voice\human_01\freedom\fight\hit\hit_1]], 1 )
    elseif snd_rand == 2 then vergas_lib.s_play( [[characters_voice\human_01\freedom\fight\hit\hit_6]], 1 )
    elseif snd_rand == 3 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_2]], 1 )
    elseif snd_rand == 4 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_6]], 1 )
    elseif snd_rand == 5 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_8]], 1 )
    elseif snd_rand == 6 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_9]], 1 )
    end
end

function scheme_3()
    level.add_cam_effector( "camera_effects\\surge_02.anm", 27, false, "" )  --хорошо мотонуло
    --level.add_pp_effector("surge_shock_old.ppe", 2003, false)  --экран двоится и темнеет несколько раз
    local snd_rand = lua_random( 1, 6 )
    if snd_rand     == 1 then vergas_lib.s_play( [[characters_voice\human_01\freedom\fight\hit\hit_1]], 1 )
    elseif snd_rand == 2 then vergas_lib.s_play( [[characters_voice\human_01\freedom\fight\hit\hit_6]], 1 )
    elseif snd_rand == 3 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_2]], 1 )
    elseif snd_rand == 4 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_6]], 1 )
    elseif snd_rand == 5 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_8]], 1 )
    elseif snd_rand == 6 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_9]], 1 )
    end
end

function scheme_4()
    level.add_pp_effector ( "blink.ppe", 2004, false )  --белая вспышка
    level.add_cam_effector( "camera_effects\\dream_1.anm", 28, false, "" )   -- отбрасывает назад и укладывает
    level.add_cam_effector( "camera_effects\\prison_1.anm", 29, false, "" )  -- пробуждение ото сна
    local snd_rand = lua_random( 1, 7 )
    if     snd_rand == 1 then vergas_lib.s_play( [[actor\arts_hit_2]], 1 )
    elseif snd_rand == 2 then vergas_lib.s_play( [[actor\arts_hit_3]], 1 )
    elseif snd_rand == 3 then vergas_lib.s_play( [[characters_voice\human_01\military\fight\hit\hit_5]], 1 )
    elseif snd_rand == 4 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_2]], 1 )
    elseif snd_rand == 5 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_6]], 1 )
    elseif snd_rand == 6 then vergas_lib.s_play( [[characters_voice\human_01\dolg\fight\hit\hit_8]], 1 )
    elseif snd_rand == 7 then vergas_lib.s_play( [[characters_voice\human_01\freedom\fight\hit\hit_6]], 1 )
    end
end

-- для разрядки/зарядки активных артов на поясе
-- при поднятии арта
function change_art_on_belt()
    if not (
        sak.arts_operate
        and sak.get_accum()
        --and #sak_inventory.belt_items > 1
        )
    then
        return
    end
    local art_id = -1
    for sect, id in pairs( sak_inventory.belt_items ) do
        if dsh.get_next_random( "vergas_art.rnd" ) > 0.5 then
            art_id = id[ 1 ]
            wprintf( "[ %s ] art to discharge on belt: section = %s, id = %s", script_name(), sect, art_id )
            break
        end
    end
    if art_id ~= -1 then
        local amount = dsh.get_next_random( "vergas_art.rnd", 7, 16 ) / 100
        local cond   = params.get_condition( art_id, 0.9999 )
        if cond > amount + 0.05 then
            local new_cond = 0
            if dsh.get_next_random( "vergas_art.rnd" ) > 0.7 then
                new_cond = cond + amount
                if new_cond > 1 then new_cond = 1 end
            else
                new_cond = cond - amount
            end
            params.upd_condition( art_id, new_cond )
            wprintf(
                "[ %s ] successfully changed art condition on belt. Old_cond: %s, new_cond = %s",
                script_name(), cond, new_cond
            )
        else
            misc.release_obj( art_id )
        end
    end
end