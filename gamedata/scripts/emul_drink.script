--[[ -----------------------------------------------------------------------------------------------
 File							: emuд_drink.script
 Build						: ver. 0.1
 Description				: Эмулятор Жажды
 Copyright					: 2009 ©Меченый(Стрелок) aka Golubev Anton
 Author						: Меченый(Стрелок)
--]] -----------------------------------------------------------------------------------------------
local cond = 0
local time_update = 6 --\\*переодичность в игровых минутах
local time_plus = 7		--\\*продливает "время" на ... наступление жажды
function need_drink()
	save_variable("emu_drink",load_variable("emu_drink",0)+1)
	timers.start_timer("emu_drink",0,0,time_update)
	power_func()
end
function power_func()
	local var = load_variable("emu_drink",0)
	local porog = 40				--40 ,4 часа
	local porog_2 = 150				--150,13 часов
	local porog_dead = 450			--450,39 часов
	local power_rest = 0.15			--~15%
	local power_rest_2 = 0.30		--~30%
	if var > porog and var < porog_2 then
		if db.actor.power > power_rest then
			db.actor.power = db.actor.power - power_rest
		end
	end
	if var>porog_2 and var<porog_dead then	
		if db.actor.power > power_rest_2 then
			db.actor.power = db.actor.power - power_rest_2
		end
	end
	if var>porog_dead then
		db.actor:kill(db.actor)
	end
end
function use_item(oid, time)
	if alife():object(oid)==nil then
		local var = load_variable("emu_drink",0) - time*10
		if var < 0 then var = 0 end
		save_variable("emu_drink", var) 
		power_func()
	end
end

function __do_timer_action(select_string,params_string)
	if select_string=="emu_drink" then
		need_drink()
	end
	if select_string=="voda" then
		use_item(params_string, time_plus)
	end
end
function on_game_load()
timers.start_timer("emu_drink",0,0,time_update)
end
function drop_item(obj)
	local section = obj:section()
	local stype = nil
if section=="voda" then 
		stype = "voda"
end
if stype~=nil then timers.start_timer(stype, 0.1, obj:id()) end
end

function save_variable(variable_name, value)
	xr_logic.pstor_store(db.actor, variable_name, value)
end
function load_variable(variable_name, value_if_not_found)
	return xr_logic.pstor_retrieve(db.actor, variable_name, value_if_not_found)
end

function del_variable(variable_name)
	if db.storage[db.actor:id()].pstor[variable_name] then
		db.storage[db.actor:id()].pstor[variable_name] = nil
	end
end
